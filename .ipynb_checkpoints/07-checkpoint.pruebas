{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Train and test DNN models for parking space prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "\n",
    "import matplotlib as mpl\n",
    "\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_time_period= 'july'\n",
    "#target_time_period= 'sept_oct'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## General functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def read_clean_subflows_fn(critera, time_period):\n",
    "    subflows= {}\n",
    "    for c in critera:\n",
    "        df = pd.read_csv(os.path.join('data', 'INE_subflows','flow_criterion_{}_clean_{}.csv'.format(c, time_period)),\n",
    "                       parse_dates=[0], index_col=0)\n",
    "        subflows[c] = df\n",
    "    return subflows"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Read zones 1 parking data (target variable)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "zone1_df = pd.read_csv(os.path.join('data', 'parkings_JULIO', 'zone1.csv'), sep=';', parse_dates=['recvTime'], index_col='recvTime')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>free</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>recvTime</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-07-13 10:00:00</th>\n",
       "      <td>167.363636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 11:00:00</th>\n",
       "      <td>246.157895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 12:00:00</th>\n",
       "      <td>351.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 13:00:00</th>\n",
       "      <td>404.080000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 14:00:00</th>\n",
       "      <td>362.413238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           free\n",
       "recvTime                       \n",
       "2020-07-13 10:00:00  167.363636\n",
       "2020-07-13 11:00:00  246.157895\n",
       "2020-07-13 12:00:00  351.465909\n",
       "2020-07-13 13:00:00  404.080000\n",
       "2020-07-13 14:00:00  362.413238"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zone1_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "zone1_df.plot(figsize=(20,3),grid=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_days = zone1_df.index"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Read subflows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_criteria = range(6,11)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "mob_flows = read_clean_subflows_fn(target_criteria, target_time_period)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Read meteorological data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tmed</th>\n",
       "      <th>tmax</th>\n",
       "      <th>tmin</th>\n",
       "      <th>hrmed</th>\n",
       "      <th>hrmax</th>\n",
       "      <th>hrmin</th>\n",
       "      <th>radmed</th>\n",
       "      <th>radmax</th>\n",
       "      <th>vvmed</th>\n",
       "      <th>vvmax</th>\n",
       "      <th>dvmed</th>\n",
       "      <th>prec</th>\n",
       "      <th>dewpt</th>\n",
       "      <th>dpv</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-07-13 09:00:00</th>\n",
       "      <td>29.9</td>\n",
       "      <td>30.9</td>\n",
       "      <td>29.0</td>\n",
       "      <td>39.5</td>\n",
       "      <td>43.9</td>\n",
       "      <td>34.5</td>\n",
       "      <td>768.7</td>\n",
       "      <td>845.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.5</td>\n",
       "      <td>47.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.6</td>\n",
       "      <td>2.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 10:00:00</th>\n",
       "      <td>31.6</td>\n",
       "      <td>32.8</td>\n",
       "      <td>30.8</td>\n",
       "      <td>36.0</td>\n",
       "      <td>39.9</td>\n",
       "      <td>32.2</td>\n",
       "      <td>887.5</td>\n",
       "      <td>929.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>4.3</td>\n",
       "      <td>44.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.7</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 11:00:00</th>\n",
       "      <td>33.0</td>\n",
       "      <td>34.2</td>\n",
       "      <td>32.1</td>\n",
       "      <td>31.8</td>\n",
       "      <td>35.0</td>\n",
       "      <td>29.1</td>\n",
       "      <td>954.2</td>\n",
       "      <td>978.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.2</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>3.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 12:00:00</th>\n",
       "      <td>33.4</td>\n",
       "      <td>33.9</td>\n",
       "      <td>32.7</td>\n",
       "      <td>29.4</td>\n",
       "      <td>32.4</td>\n",
       "      <td>25.4</td>\n",
       "      <td>965.5</td>\n",
       "      <td>974.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>5.0</td>\n",
       "      <td>61.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>3.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-13 13:00:00</th>\n",
       "      <td>33.9</td>\n",
       "      <td>34.6</td>\n",
       "      <td>33.4</td>\n",
       "      <td>25.8</td>\n",
       "      <td>28.9</td>\n",
       "      <td>20.9</td>\n",
       "      <td>923.3</td>\n",
       "      <td>958.0</td>\n",
       "      <td>2.1</td>\n",
       "      <td>5.4</td>\n",
       "      <td>53.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.6</td>\n",
       "      <td>3.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31 19:00:00</th>\n",
       "      <td>30.8</td>\n",
       "      <td>32.5</td>\n",
       "      <td>29.4</td>\n",
       "      <td>52.2</td>\n",
       "      <td>59.0</td>\n",
       "      <td>45.8</td>\n",
       "      <td>1.2</td>\n",
       "      <td>10.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.9</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.8</td>\n",
       "      <td>2.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31 20:00:00</th>\n",
       "      <td>28.7</td>\n",
       "      <td>29.5</td>\n",
       "      <td>28.1</td>\n",
       "      <td>61.1</td>\n",
       "      <td>62.8</td>\n",
       "      <td>58.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>1.1</td>\n",
       "      <td>339.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>1.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31 21:00:00</th>\n",
       "      <td>28.4</td>\n",
       "      <td>29.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>61.3</td>\n",
       "      <td>62.9</td>\n",
       "      <td>60.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>1.3</td>\n",
       "      <td>260.6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.3</td>\n",
       "      <td>1.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31 22:00:00</th>\n",
       "      <td>27.1</td>\n",
       "      <td>27.8</td>\n",
       "      <td>26.4</td>\n",
       "      <td>65.2</td>\n",
       "      <td>67.9</td>\n",
       "      <td>62.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>330.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>1.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31 23:00:00</th>\n",
       "      <td>26.7</td>\n",
       "      <td>27.0</td>\n",
       "      <td>26.2</td>\n",
       "      <td>67.0</td>\n",
       "      <td>68.2</td>\n",
       "      <td>66.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.9</td>\n",
       "      <td>175.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.1</td>\n",
       "      <td>1.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>447 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     tmed  tmax  tmin  hrmed  hrmax  hrmin  radmed  radmax  \\\n",
       "date                                                                         \n",
       "2020-07-13 09:00:00  29.9  30.9  29.0   39.5   43.9   34.5   768.7   845.0   \n",
       "2020-07-13 10:00:00  31.6  32.8  30.8   36.0   39.9   32.2   887.5   929.0   \n",
       "2020-07-13 11:00:00  33.0  34.2  32.1   31.8   35.0   29.1   954.2   978.0   \n",
       "2020-07-13 12:00:00  33.4  33.9  32.7   29.4   32.4   25.4   965.5   974.0   \n",
       "2020-07-13 13:00:00  33.9  34.6  33.4   25.8   28.9   20.9   923.3   958.0   \n",
       "...                   ...   ...   ...    ...    ...    ...     ...     ...   \n",
       "2020-07-31 19:00:00  30.8  32.5  29.4   52.2   59.0   45.8     1.2    10.8   \n",
       "2020-07-31 20:00:00  28.7  29.5  28.1   61.1   62.8   58.9     0.0     0.0   \n",
       "2020-07-31 21:00:00  28.4  29.0  27.8   61.3   62.9   60.2     0.0     0.0   \n",
       "2020-07-31 22:00:00  27.1  27.8  26.4   65.2   67.9   62.1     0.0     0.0   \n",
       "2020-07-31 23:00:00  26.7  27.0  26.2   67.0   68.2   66.1     0.0     0.0   \n",
       "\n",
       "                     vvmed  vvmax  dvmed  prec  dewpt  dpv  \n",
       "date                                                        \n",
       "2020-07-13 09:00:00    1.3    3.5   47.3   0.0   14.6  2.6  \n",
       "2020-07-13 10:00:00    1.4    4.3   44.7   0.0   14.7  3.0  \n",
       "2020-07-13 11:00:00    1.7    5.2   39.0   0.0   14.0  3.4  \n",
       "2020-07-13 12:00:00    1.9    5.0   61.1   0.0   13.1  3.6  \n",
       "2020-07-13 13:00:00    2.1    5.4   53.3   0.0   11.6  3.9  \n",
       "...                    ...    ...    ...   ...    ...  ...  \n",
       "2020-07-31 19:00:00    0.5    1.9    1.0   0.0   19.8  2.1  \n",
       "2020-07-31 20:00:00    0.2    1.1  339.4   0.0   20.5  1.5  \n",
       "2020-07-31 21:00:00    0.3    1.3  260.6   0.0   20.3  1.5  \n",
       "2020-07-31 22:00:00    0.0    0.5  330.9   0.0   20.0  1.3  \n",
       "2020-07-31 23:00:00    0.2    0.9  175.7   0.0   20.1  1.2  \n",
       "\n",
       "[447 rows x 14 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "meteor = pd.read_csv(os.path.join('data', 'parkings_JULIO', 'meteor.txt'), sep=';', parse_dates={'date': ['fecha', 'hora']}, index_col='date')\n",
    "meteor"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Format data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_steps = 12\n",
    "T_ = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {},
   "outputs": [],
   "source": [
    "#input: flow(t), flow(t-1), ..,flow(t-prev_hours). output: parking(t+T)\n",
    "def generate_univariate_time_series_fn(zone_parking, subflow, prev_hours, T=1):\n",
    "    series = []\n",
    "    for i in range(0,subflow.shape[0]-prev_hours-T):\n",
    "        mob_values = subflow[i:i+prev_hours].values\n",
    "        parking_value = zone_parking.iloc[prev_hours + i +T -1]\n",
    "        s = np.append(mob_values,parking_value).reshape(-1,prev_hours+1)\n",
    "        series.append(s)\n",
    "    #series= np.array(series)\n",
    "    #series = series.reshape(series.shape[0],prev_hours+1,1)\n",
    "    return series\n",
    "\n",
    "#input: flow(t), flow(t-1), ..,flow(t-prev_hours), parking(t), parking(t-1),...,\n",
    "#parking(t-prev_hours),. output: parking(t+T)\n",
    "def generate_univariate_time_series_fn2(zone_parking, subflow, prev_hours, T=1): \n",
    "    series = []\n",
    "    for i in range(0,subflow.shape[0]-prev_hours-T):\n",
    "        mob_values = subflow[i:i+prev_hours].values\n",
    "        parking_values = zone_parking.iloc[i:(prev_hours + i +T -1)]\n",
    "        s = np.append(mob_values,parking_values).reshape(-1,prev_hours*2)\n",
    "        series.append(s)\n",
    "    series= np.array(series)\n",
    "    series = series.reshape(series.shape[0],prev_hours*2,1)\n",
    "    return series\n",
    "\n",
    "#input: flow(t), flow(t-1), ..,flow(t-prev_hours), parking(t), parking(t-1),...,\n",
    "#parking(t-prev_hours), meteor(t), meteor(t-1), ..., meteor(t-prev_hours) output: parking(t+T)\n",
    "def generate_univariate_time_series_fn3(zone_parking, subflow, meteoro, prev_hours, T=1): \n",
    "    series = []\n",
    "    for i in range(0,subflow.shape[0]-prev_hours-T):\n",
    "        mob_values = subflow[i:i+prev_hours].values\n",
    "        parking_values = zone_parking.iloc[i:(prev_hours + i +T -1)]\n",
    "        meteor_values = meteoro.loc[i:(prev_hours + i +T -2)]\n",
    "        mob_values_d = pd.DataFrame(mob_values)\n",
    "        mob_values_d.index += i\n",
    "         #s = np.append(mob_values,meteor,parking_values).reshape(-1,prev_hours*2)\n",
    "        s = pd.concat([mob_values_d,meteor_values, parking_values], axis=1)\n",
    "        series.append(s)\n",
    "    series2 = [item.to_numpy().reshape(-1)for item in series]\n",
    "    #series= np.array(series)\n",
    "    #series = series.reshape(series.shape[0],prev_hours*2,1)\n",
    "    return series2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_time_series_for_rnn_fn(zone_parking, subflow, prev_hours, T=1):\n",
    "    X= []\n",
    "    Y= []\n",
    "    for i in range(0,subflow.shape[0]-prev_hours-T):\n",
    "        mob_values = subflow[i:i+prev_hours].values\n",
    "        X.append(mob_values)\n",
    "        parking_values = zone_parking.iloc[i+T:i+T+prev_hours].values\n",
    "        Y.append(parking_values)\n",
    "    X= np.array(X)\n",
    "    X = X.reshape(X.shape[0],prev_hours,1)\n",
    "    \n",
    "    Y= np.array(Y)\n",
    "    Y = Y.reshape(Y.shape[0],prev_hours,1)\n",
    "    \n",
    "    return X,Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "#input: flow(t), flow(t-1), ..,flow(t-prev_hours), parking(t), parking(t-1),...,#parking(t-prev_hours),. \n",
    "#output: parking(t+1), parking (t+2),..,parking(t+T)\n",
    "def generate_time_series_for_rnn_fn2(zone_parking, subflow, prev_hours, T=1):\n",
    "    X= []\n",
    "    Y= []\n",
    "    for i in range(0,subflow.shape[0]-prev_hours-T):\n",
    "        mob_values = subflow[i:i+prev_hours].values\n",
    "        parking_values = zone_parking[i:i+prev_hours].values\n",
    "        two_dim_values = np.concatenate((mob_values, parking_values), axis=0)#.reshape(-1,2)\n",
    "        X.append(two_dim_values)\n",
    "        parking_values = zone_parking.iloc[i+T:i+T+prev_hours].values\n",
    "        Y.append(parking_values)\n",
    "    X= np.array(X)\n",
    "    X = X.reshape(X.shape[0],prev_hours,2)\n",
    "    \n",
    "    Y= np.array(Y)\n",
    "    Y = Y.reshape(Y.shape[0],prev_hours,1)\n",
    "    \n",
    "    return X,Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "a =np.array([1,2,3])\n",
    "b =np.array([4,5,6])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 2, 3, 4, 5, 6])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.concatenate((a, b), axis=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2],\n",
       "       [3, 4],\n",
       "       [5, 6]])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.concatenate((a, b), axis=0).reshape(-1,2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scale data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.050581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.537342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.377285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.498533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.536396</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0  1.050581\n",
       "1  0.537342\n",
       "2  0.377285\n",
       "3  0.498533\n",
       "4  1.536396"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler_flow =  StandardScaler()\n",
    "flow_scaled = scaler_flow.fit_transform(mob_flows[9].loc[target_days].values)\n",
    "flow_scaled_df = pd.DataFrame(flow_scaled)\n",
    "flow_scaled_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-2.046244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.477782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.718037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.338452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.639057</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0\n",
       "0 -2.046244\n",
       "1 -1.477782\n",
       "2 -0.718037\n",
       "3 -0.338452\n",
       "4 -0.639057"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler_parking =  StandardScaler()\n",
    "zone_scaled =scaler_parking.fit_transform(zone1_df.values)\n",
    "parking_scaled_df = pd.DataFrame(zone_scaled)\n",
    "parking_scaled_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.753114</td>\n",
       "      <td>0.813862</td>\n",
       "      <td>0.768988</td>\n",
       "      <td>-0.838229</td>\n",
       "      <td>-0.815453</td>\n",
       "      <td>-0.850983</td>\n",
       "      <td>1.570573</td>\n",
       "      <td>1.391241</td>\n",
       "      <td>0.615937</td>\n",
       "      <td>0.818566</td>\n",
       "      <td>-0.982886</td>\n",
       "      <td>-0.060552</td>\n",
       "      <td>-0.481190</td>\n",
       "      <td>0.701921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.048587</td>\n",
       "      <td>1.100400</td>\n",
       "      <td>1.052181</td>\n",
       "      <td>-1.071899</td>\n",
       "      <td>-1.092579</td>\n",
       "      <td>-1.020188</td>\n",
       "      <td>1.754888</td>\n",
       "      <td>1.514918</td>\n",
       "      <td>1.047641</td>\n",
       "      <td>1.341603</td>\n",
       "      <td>-1.049522</td>\n",
       "      <td>-0.060552</td>\n",
       "      <td>-0.780388</td>\n",
       "      <td>1.015056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.133008</td>\n",
       "      <td>1.038999</td>\n",
       "      <td>1.182885</td>\n",
       "      <td>-1.205424</td>\n",
       "      <td>-1.239626</td>\n",
       "      <td>-1.222142</td>\n",
       "      <td>1.786113</td>\n",
       "      <td>1.504822</td>\n",
       "      <td>1.335444</td>\n",
       "      <td>1.225373</td>\n",
       "      <td>-0.791161</td>\n",
       "      <td>-0.060552</td>\n",
       "      <td>-1.165071</td>\n",
       "      <td>1.171624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.238534</td>\n",
       "      <td>1.182269</td>\n",
       "      <td>1.335374</td>\n",
       "      <td>-1.405713</td>\n",
       "      <td>-1.437573</td>\n",
       "      <td>-1.467763</td>\n",
       "      <td>1.669501</td>\n",
       "      <td>1.464438</td>\n",
       "      <td>1.623247</td>\n",
       "      <td>1.457834</td>\n",
       "      <td>-0.882348</td>\n",
       "      <td>-0.060552</td>\n",
       "      <td>-1.806211</td>\n",
       "      <td>1.406475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.069692</td>\n",
       "      <td>1.038999</td>\n",
       "      <td>1.095749</td>\n",
       "      <td>-1.199861</td>\n",
       "      <td>-1.245282</td>\n",
       "      <td>-1.140269</td>\n",
       "      <td>1.395101</td>\n",
       "      <td>1.275135</td>\n",
       "      <td>2.054951</td>\n",
       "      <td>1.806525</td>\n",
       "      <td>-0.816881</td>\n",
       "      <td>-0.060552</td>\n",
       "      <td>-1.250557</td>\n",
       "      <td>1.171624</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          0         1         2         3         4         5         6  \\\n",
       "0  0.753114  0.813862  0.768988 -0.838229 -0.815453 -0.850983  1.570573   \n",
       "1  1.048587  1.100400  1.052181 -1.071899 -1.092579 -1.020188  1.754888   \n",
       "2  1.133008  1.038999  1.182885 -1.205424 -1.239626 -1.222142  1.786113   \n",
       "3  1.238534  1.182269  1.335374 -1.405713 -1.437573 -1.467763  1.669501   \n",
       "4  1.069692  1.038999  1.095749 -1.199861 -1.245282 -1.140269  1.395101   \n",
       "\n",
       "          7         8         9        10        11        12        13  \n",
       "0  1.391241  0.615937  0.818566 -0.982886 -0.060552 -0.481190  0.701921  \n",
       "1  1.514918  1.047641  1.341603 -1.049522 -0.060552 -0.780388  1.015056  \n",
       "2  1.504822  1.335444  1.225373 -0.791161 -0.060552 -1.165071  1.171624  \n",
       "3  1.464438  1.623247  1.457834 -0.882348 -0.060552 -1.806211  1.406475  \n",
       "4  1.275135  2.054951  1.806525 -0.816881 -0.060552 -1.250557  1.171624  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler_meteor =  StandardScaler()\n",
    "meteor_scaled =scaler_meteor.fit_transform(meteor.loc[target_days].values)\n",
    "meteor_scaled_df = pd.DataFrame(meteor_scaled)\n",
    "meteor_scaled_df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generate time series samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.05058106  0.53734227  0.37728519  0.49853284  1.53639552  0.78392941\n",
      "   1.05006241  0.83789911  1.10564543  1.02231909  0.38188192 -0.26148127\n",
      "   0.93845406]]\n",
      "[[ 1.05058106]\n",
      " [ 0.53734227]\n",
      " [ 0.37728519]\n",
      " [ 0.49853284]\n",
      " [ 1.53639552]\n",
      " [ 0.78392941]\n",
      " [ 1.05006241]\n",
      " [ 0.83789911]\n",
      " [ 1.10564543]\n",
      " [ 1.02231909]\n",
      " [ 0.38188192]\n",
      " [-0.26148127]\n",
      " [-2.046244  ]\n",
      " [-1.47778221]\n",
      " [-0.71803673]\n",
      " [-0.33845197]\n",
      " [-0.63905714]\n",
      " [-1.20233915]\n",
      " [-1.47972296]\n",
      " [-1.37928042]\n",
      " [-0.66823939]\n",
      " [ 0.07456829]\n",
      " [ 0.69192165]\n",
      " [ 0.85900859]]\n"
     ]
    }
   ],
   "source": [
    "ts = generate_univariate_time_series_fn(parking_scaled_df, flow_scaled_df, n_steps, T_)\n",
    "ts\n",
    "print(ts[0])\n",
    "ts = generate_univariate_time_series_fn2(parking_scaled_df, flow_scaled_df, n_steps, T_)\n",
    "print(ts[0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'list' object has no attribute 'shape'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-226-c2f845d0b612>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'list' object has no attribute 'shape'"
     ]
    }
   ],
   "source": [
    "ts.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_series = ts.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Split training-test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_rate = 0.9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_series_training = round(n_series * training_rate)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, y_train = ts[:n_series_training,:n_steps], ts[:n_series_training, -1]\n",
    "X_valid, y_valid = ts[n_series_training:,:n_steps], ts[n_series_training:, -1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((390, 12, 1), (390, 1))"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((43, 12, 1), (43, 1))"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_valid.shape, y_valid.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_train_test(zone_parking, subflow, prev_hours, T=1, fun =1, tr= 0.9):\n",
    "    if(fun==1):\n",
    "        ts = generate_univariate_time_series_fn(zone_parking, subflow, n_steps, T_)\n",
    "    if(fun==2): \n",
    "        ts = generate_univariate_time_series_fn2(zone_parking, subflow, n_steps, T_)\n",
    "    else:\n",
    "        ts = generate_univariate_time_series_fn3(zone_parking, subflow, n_steps, T_)\n",
    "    n_series = ts.shape[0]\n",
    "    training_rate = tr\n",
    "    n_series_training = round(n_series * training_rate)\n",
    "    X_train, y_train = ts[:n_series_training,:n_steps], ts[:n_series_training, -1]\n",
    "    X_valid, y_valid = ts[n_series_training:,:n_steps], ts[n_series_training:, -1]\n",
    "    return X_train, y_train, X_valid, y_valid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_train_test_for_rnn(zone_parking, subflow, prev_hours, T=1, fun =1, tr= 0.9):\n",
    "    if(fun==1):\n",
    "        X,Y = generate_time_series_for_rnn_fn(zone_parking, subflow, n_steps, T_)\n",
    "    else: \n",
    "        X,Y = generate_time_series_for_rnn_fn2(zone_parking, subflow, n_steps, T_)\n",
    "\n",
    "    n_train_samples = round(X.shape[0] * tr)\n",
    "    X_train = X[:n_train_samples]\n",
    "    y_train = Y[:n_train_samples]\n",
    "\n",
    "    X_valid = X[n_train_samples:]\n",
    "    y_valid = Y[n_train_samples:]\n",
    "      \n",
    "    return X_train, y_train, X_valid, y_valid"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Test DNN models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_learning_curves(loss, val_loss):\n",
    "    plt.plot(np.arange(len(loss)) + 0.5, loss, \"b.-\", label=\"Training loss\")\n",
    "    plt.plot(np.arange(len(val_loss)) + 1, val_loss, \"r.-\", label=\"Validation loss\")\n",
    "    #plt.gca().xaxis.set_major_locator(mpl.ticker.MaxNLocator(integer=True))\n",
    "    #plt.axis([1, 20, 0, 0.05])\n",
    "    plt.legend(fontsize=14)\n",
    "    plt.xlabel(\"Epochs\")\n",
    "    plt.ylabel(\"Loss\")\n",
    "    plt.grid(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mape(actual, pred): \n",
    "    actual, pred = np.array(actual), np.array(pred)\n",
    "    return np.mean(np.abs((actual - pred) / actual)) * 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "def compute_metrics_fn(y_valid, y_hat, scaler):\n",
    "    ## actual train and test values\n",
    "    y_hat_resc = scaler_parking.inverse_transform(y_hat)\n",
    "    y_valid_resc = scaler_parking.inverse_transform(y_valid)\n",
    "\n",
    "    mae_ = mean_absolute_error(y_valid_resc, y_hat_resc)\n",
    "    mse_ = mean_squared_error(y_valid_resc, y_hat_resc)\n",
    "    rmse_ = mean_squared_error(y_valid_resc, y_hat_resc, squared = False)\n",
    "    cvrmse_ = rmse_/np.mean(y_valid_resc)*100 # it is a percentage\n",
    "    mape_ = mape(y_valid_resc, y_hat_resc)\n",
    "    \n",
    "    return mae_, mse_, rmse_, cvrmse_, mape_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_prediction_vs_groundtruth_fn(y_valid, y_hat):\n",
    "    y_hat_resc = scaler_parking.inverse_transform( y_hat[:,-1].reshape(-1,))\n",
    "    y_valid_resc = scaler_parking.inverse_transform(y_valid[:,-1].reshape(-1,))\n",
    "    plt.plot(np.arange(len(y_hat_resc)), y_hat_resc, \"b.-\", label=\"y_hat\")\n",
    "    plt.plot(np.arange(len(y_valid_resc)), y_valid_resc, \"r.-\", label=\"y_true\")\n",
    "    plt.legend(fontsize=14)\n",
    "    plt.xlabel(\"Timestamp\")\n",
    "    plt.ylabel(\"Free places\")\n",
    "    plt.grid(True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### MLP - benchmark"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow import keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "13/13 [==============================] - 1s 43ms/step - loss: 1.2167 - val_loss: 1.3824\n",
      "Epoch 2/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 1.1351 - val_loss: 1.2606\n",
      "Epoch 3/100\n",
      "13/13 [==============================] - 0s 6ms/step - loss: 1.0603 - val_loss: 1.1596\n",
      "Epoch 4/100\n",
      "13/13 [==============================] - 0s 6ms/step - loss: 1.0003 - val_loss: 1.0710\n",
      "Epoch 5/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.9568 - val_loss: 0.9869\n",
      "Epoch 6/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.9136 - val_loss: 0.9232\n",
      "Epoch 7/100\n",
      "13/13 [==============================] - 0s 9ms/step - loss: 0.8852 - val_loss: 0.8644\n",
      "Epoch 8/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.8609 - val_loss: 0.8215\n",
      "Epoch 9/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.8416 - val_loss: 0.7802\n",
      "Epoch 10/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.8272 - val_loss: 0.7450\n",
      "Epoch 11/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.8139 - val_loss: 0.7139\n",
      "Epoch 12/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.8016 - val_loss: 0.6853\n",
      "Epoch 13/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.7912 - val_loss: 0.6699\n",
      "Epoch 14/100\n",
      "13/13 [==============================] - 0s 8ms/step - loss: 0.7830 - val_loss: 0.6533\n",
      "Epoch 15/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.7747 - val_loss: 0.6317\n",
      "Epoch 16/100\n",
      "13/13 [==============================] - 0s 8ms/step - loss: 0.7667 - val_loss: 0.6166\n",
      "Epoch 17/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.7600 - val_loss: 0.6086\n",
      "Epoch 18/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.7533 - val_loss: 0.6024\n",
      "Epoch 19/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.7477 - val_loss: 0.5925\n",
      "Epoch 20/100\n",
      "13/13 [==============================] - 0s 4ms/step - loss: 0.7405 - val_loss: 0.5825\n",
      "Epoch 21/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7345 - val_loss: 0.5752\n",
      "Epoch 22/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7279 - val_loss: 0.5711\n",
      "Epoch 23/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7218 - val_loss: 0.5574\n",
      "Epoch 24/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7160 - val_loss: 0.5484\n",
      "Epoch 25/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7106 - val_loss: 0.5464\n",
      "Epoch 26/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.7054 - val_loss: 0.5441\n",
      "Epoch 27/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.7008 - val_loss: 0.5305\n",
      "Epoch 28/100\n",
      "13/13 [==============================] - 0s 9ms/step - loss: 0.6952 - val_loss: 0.5192\n",
      "Epoch 29/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.6900 - val_loss: 0.5194\n",
      "Epoch 30/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.6853 - val_loss: 0.5142\n",
      "Epoch 31/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6810 - val_loss: 0.5100\n",
      "Epoch 32/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6766 - val_loss: 0.5025\n",
      "Epoch 33/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6720 - val_loss: 0.4974\n",
      "Epoch 34/100\n",
      "13/13 [==============================] - 0s 6ms/step - loss: 0.6676 - val_loss: 0.4945\n",
      "Epoch 35/100\n",
      "13/13 [==============================] - 0s 6ms/step - loss: 0.6635 - val_loss: 0.4938\n",
      "Epoch 36/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6587 - val_loss: 0.4846\n",
      "Epoch 37/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6545 - val_loss: 0.4828\n",
      "Epoch 38/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.6506 - val_loss: 0.4752\n",
      "Epoch 39/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6467 - val_loss: 0.4690\n",
      "Epoch 40/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6428 - val_loss: 0.4665\n",
      "Epoch 41/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6391 - val_loss: 0.4689\n",
      "Epoch 42/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.6356 - val_loss: 0.4655\n",
      "Epoch 43/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6321 - val_loss: 0.4667\n",
      "Epoch 44/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.6288 - val_loss: 0.4649\n",
      "Epoch 45/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.6255 - val_loss: 0.4620\n",
      "Epoch 46/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.6233 - val_loss: 0.4661\n",
      "Epoch 47/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6197 - val_loss: 0.4630\n",
      "Epoch 48/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6169 - val_loss: 0.4575\n",
      "Epoch 49/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6145 - val_loss: 0.4494\n",
      "Epoch 50/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.6119 - val_loss: 0.4490\n",
      "Epoch 51/100\n",
      "13/13 [==============================] - 0s 8ms/step - loss: 0.6094 - val_loss: 0.4457\n",
      "Epoch 52/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.6066 - val_loss: 0.4443\n",
      "Epoch 53/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.6035 - val_loss: 0.4355\n",
      "Epoch 54/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.6019 - val_loss: 0.4270\n",
      "Epoch 55/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5990 - val_loss: 0.4304\n",
      "Epoch 56/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5968 - val_loss: 0.4315\n",
      "Epoch 57/100\n",
      "13/13 [==============================] - 0s 13ms/step - loss: 0.5951 - val_loss: 0.4328\n",
      "Epoch 58/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5930 - val_loss: 0.4303\n",
      "Epoch 59/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.5912 - val_loss: 0.4264\n",
      "Epoch 60/100\n",
      "13/13 [==============================] - 0s 9ms/step - loss: 0.5900 - val_loss: 0.4361\n",
      "Epoch 61/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5877 - val_loss: 0.4357\n",
      "Epoch 62/100\n",
      "13/13 [==============================] - 0s 4ms/step - loss: 0.5861 - val_loss: 0.4397\n",
      "Epoch 63/100\n",
      "13/13 [==============================] - 0s 4ms/step - loss: 0.5853 - val_loss: 0.4299\n",
      "Epoch 64/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5826 - val_loss: 0.4244\n",
      "Epoch 65/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5807 - val_loss: 0.4212\n",
      "Epoch 66/100\n",
      "13/13 [==============================] - 0s 7ms/step - loss: 0.5792 - val_loss: 0.4281\n",
      "Epoch 67/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5777 - val_loss: 0.4206\n",
      "Epoch 68/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5761 - val_loss: 0.4172\n",
      "Epoch 69/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5750 - val_loss: 0.4204\n",
      "Epoch 70/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5739 - val_loss: 0.4146\n",
      "Epoch 71/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.5727 - val_loss: 0.4119\n",
      "Epoch 72/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5712 - val_loss: 0.4140\n",
      "Epoch 73/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5698 - val_loss: 0.4046\n",
      "Epoch 74/100\n",
      "13/13 [==============================] - 0s 15ms/step - loss: 0.5679 - val_loss: 0.4050\n",
      "Epoch 75/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5669 - val_loss: 0.4019\n",
      "Epoch 76/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5661 - val_loss: 0.4031\n",
      "Epoch 77/100\n",
      "13/13 [==============================] - 0s 4ms/step - loss: 0.5648 - val_loss: 0.4068\n",
      "Epoch 78/100\n",
      "13/13 [==============================] - 0s 7ms/step - loss: 0.5637 - val_loss: 0.4006\n",
      "Epoch 79/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5623 - val_loss: 0.3970\n",
      "Epoch 80/100\n",
      "13/13 [==============================] - 0s 9ms/step - loss: 0.5614 - val_loss: 0.4019\n",
      "Epoch 81/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5601 - val_loss: 0.4015\n",
      "Epoch 82/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5598 - val_loss: 0.3907\n",
      "Epoch 83/100\n",
      "13/13 [==============================] - 0s 9ms/step - loss: 0.5581 - val_loss: 0.3968\n",
      "Epoch 84/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5572 - val_loss: 0.4005\n",
      "Epoch 85/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5563 - val_loss: 0.3992\n",
      "Epoch 86/100\n",
      "13/13 [==============================] - 0s 10ms/step - loss: 0.5549 - val_loss: 0.4014\n",
      "Epoch 87/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5546 - val_loss: 0.4073\n",
      "Epoch 88/100\n",
      "13/13 [==============================] - 0s 13ms/step - loss: 0.5538 - val_loss: 0.4075\n",
      "Epoch 89/100\n",
      "13/13 [==============================] - 0s 12ms/step - loss: 0.5528 - val_loss: 0.4045\n",
      "Epoch 90/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5518 - val_loss: 0.3942\n",
      "Epoch 91/100\n",
      "13/13 [==============================] - 0s 7ms/step - loss: 0.5511 - val_loss: 0.3903\n",
      "Epoch 92/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5500 - val_loss: 0.3853\n",
      "Epoch 93/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5499 - val_loss: 0.3889\n",
      "Epoch 94/100\n",
      "13/13 [==============================] - 0s 6ms/step - loss: 0.5490 - val_loss: 0.3853\n",
      "Epoch 95/100\n",
      "13/13 [==============================] - 0s 5ms/step - loss: 0.5480 - val_loss: 0.3858\n",
      "Epoch 96/100\n",
      "13/13 [==============================] - 0s 13ms/step - loss: 0.5479 - val_loss: 0.3890\n",
      "Epoch 97/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5470 - val_loss: 0.3926\n",
      "Epoch 98/100\n",
      "13/13 [==============================] - 0s 13ms/step - loss: 0.5463 - val_loss: 0.3906\n",
      "Epoch 99/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5458 - val_loss: 0.3933\n",
      "Epoch 100/100\n",
      "13/13 [==============================] - 0s 11ms/step - loss: 0.5447 - val_loss: 0.3932\n"
     ]
    }
   ],
   "source": [
    "np.random.seed(42)\n",
    "tf.random.set_seed(42)\n",
    "\n",
    "model_mlp = keras.models.Sequential([\n",
    "    keras.layers.Flatten(input_shape=[n_steps, 1]),\n",
    "    keras.layers.Dense(1)\n",
    "])\n",
    "\n",
    "model_mlp.compile(loss=\"mse\", optimizer=\"adam\")\n",
    "history = model_mlp.fit(X_train, y_train, epochs=100, validation_data=(X_valid, y_valid))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_hat = model_mlp.predict(X_valid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Get metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 73.932, MSE: 7553.531, RMSE: 86.911, CVRMSE: 20.408, MAPE: 26.495\n"
     ]
    }
   ],
   "source": [
    "mae_, mse_, rmse_, cvrmse_, mape_ = compute_metrics_fn(y_valid, y_hat, scaler_parking)\n",
    "\n",
    "print('MAE: {:.3f}, MSE: {:.3f}, RMSE: {:.3f}, CVRMSE: {:.3f}, MAPE: {:.3f}'.format(mae_, mse_, rmse_, cvrmse_, mape_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_prediction_vs_groundtruth_fn(y_valid, y_hat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mlp_benchmark(X_train, y_train, X_valid, y_valid):\n",
    "    np.random.seed(42)\n",
    "    tf.random.set_seed(42)\n",
    "\n",
    "    model_mlp = keras.models.Sequential([\n",
    "        keras.layers.Flatten(input_shape=[n_steps, 1]),\n",
    "        keras.layers.Dense(1)\n",
    "    ])\n",
    "\n",
    "    model_mlp.compile(loss=\"mse\", optimizer=\"adam\")\n",
    "    history = model_mlp.fit(X_train, y_train, epochs=100, verbose=0, validation_data=(X_valid, y_valid))\n",
    "    plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])\n",
    "    plt.show()\n",
    "    y_hat = model_mlp.predict(X_valid)\n",
    "    mae_, mse_, rmse_, cvrmse_, mape_ = compute_metrics_fn(y_valid, y_hat, scaler_parking)\n",
    "    print('MAE: {:.3f}, MSE: {:.3f}, RMSE: {:.3f}, CVRMSE: {:.3f}, MAPE: {:.3f}'.format(mae_, mse_, rmse_, cvrmse_, mape_))\n",
    "    plot_prediction_vs_groundtruth_fn(y_valid, y_hat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 73.932, MSE: 7553.531, RMSE: 86.911, CVRMSE: 20.408, MAPE: 26.495\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Model with flows as inputs\n",
    "X_train, y_train, X_valid, y_valid = generate_train_test(parking_scaled_df, flow_scaled_df, 12, T=1)\n",
    "mlp_benchmark(X_train, y_train, X_valid, y_valid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 69.832, MSE: 7090.203, RMSE: 84.203, CVRMSE: 19.781, MAPE: 25.783\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Model with flows and parking as inputs\n",
    "X_train, y_train, X_valid, y_valid = generate_train_test(parking_scaled_df, flow_scaled_df, \n",
    "                                                         12, T=1, fun = 2)\n",
    "mlp_benchmark(X_train, y_train, X_valid, y_valid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "generate_train_test() got multiple values for argument 'T'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-51-e91c7e537e6b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Model with flows, meteorology and parking as inputs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m X_train, y_train, X_valid, y_valid = generate_train_test(parking_scaled_df, flow_scaled_df, meteor_scaled_df, \n\u001b[0m\u001b[1;32m      3\u001b[0m                                                          12, T=1, fun = 3)\n\u001b[1;32m      4\u001b[0m \u001b[0mmlp_benchmark\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_valid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_valid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: generate_train_test() got multiple values for argument 'T'"
     ]
    }
   ],
   "source": [
    "# Model with flows, meteorology and parking as inputs\n",
    "X_train, y_train, X_valid, y_valid = generate_train_test(parking_scaled_df, flow_scaled_df, meteor_scaled_df, \n",
    "                                                         12, T=1, fun = 3)\n",
    "mlp_benchmark(X_train, y_train, X_valid, y_valid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  GRU model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gru_model(X_train, y_train, X_valid, y_valid, fun=1):\n",
    "    np.random.seed(42)\n",
    "    tf.random.set_seed(42)\n",
    "\n",
    "    model_gru = keras.models.Sequential([\n",
    "        keras.layers.LSTM(20, return_sequences=True,  input_shape=[None, fun]),\n",
    "        keras.layers.LSTM(20, return_sequences=True),\n",
    "        keras.layers.TimeDistributed(keras.layers.Dense(10)),\n",
    "        keras.layers.Dense(1)\n",
    "    ])\n",
    "\n",
    "    model_gru.compile(loss=\"mse\", optimizer=\"adam\")\n",
    "    history = model_gru.fit(X_train, y_train, verbose=0, epochs=100, validation_data=(X_valid, y_valid))\n",
    "    \n",
    "    plot_learning_curves(history.history[\"loss\"], history.history[\"val_loss\"])\n",
    "    plt.show()\n",
    "    \n",
    "    y_hat = model_gru.predict(X_valid)\n",
    "\n",
    "    mae_, mse_, rmse_, cvrmse_, mape_ = compute_metrics_fn(y_valid[:,-1].reshape(-1,), y_hat[:,-1].reshape(-1,), scaler_parking)\n",
    "\n",
    "    print('MAE: {:.3f}, MSE: {:.3f}, RMSE: {:.3f}, CVRMSE: {:.3f}, MAPE: {:.3f}'.format(mae_, mse_, rmse_, cvrmse_, mape_))\n",
    "    \n",
    "    plot_prediction_vs_groundtruth_fn(y_valid, y_hat)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Only with flow as input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, y_train, X_valid, y_valid= generate_train_test_for_rnn(parking_scaled_df, flow_scaled_df, 12, T=1, fun=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((390, 12, 1), (390, 12, 1), (43, 12, 1), (43, 12, 1))"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, y_train.shape, X_valid.shape, y_valid.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 36.616, MSE: 1815.333, RMSE: 42.607, CVRMSE: 10.005, MAPE: 12.104\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gru_model(X_train, y_train, X_valid, y_valid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we try with flow + parking as input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, y_train, X_valid, y_valid= generate_train_test_for_rnn(parking_scaled_df, flow_scaled_df, 12, T=1, fun=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((390, 12, 2), (390, 12, 1), (43, 12, 2), (43, 12, 1))"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, y_train.shape, X_valid.shape, y_valid.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:5 out of the last 9 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f4b987011f0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/tutorials/customization/performance#python_or_tensor_args and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
      "MAE: 28.388, MSE: 1361.585, RMSE: 36.900, CVRMSE: 8.665, MAPE: 8.792\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gru_model(X_train, y_train, X_valid, y_valid, 2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------------------------------------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "That's all folks!\n"
     ]
    }
   ],
   "source": [
    "print(\"That's all folks!\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
